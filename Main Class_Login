/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Main.java to edit this template
 */
package poepartwo;
import javax.swing.JOptionPane;
/**
 *
 * @author Sibusio Mhlongo
 * Student number: ST10439449
 * PROG5121
 * POE PART 2
 * 22 MAY 2024
 */
public class Poepartwo {

    /**
     * @param args the command line arguments
     */
    public class LoginDetails{
        
        public static String taskID[] = null;
        public static String name[] = null;
        public static String status[] = null;
        public static double number[] = null;
        public static int taskduration[] = null;
        public static String Description[] = null;
        public static String developer[] = null;
        
        

    }
    public static void main(String[] args) {
       
       int num = -1;
       
       //Calling other classes inside the main method
       Task tasks = new Task();
       taskReport tReport = new taskReport();
       
       String[] options = {"REGISTER", "LOGIN", "EXIT"};
       int selectionChoice = JOptionPane.showOptionDialog(null, "WELCOME TO EasyKanban", "Application Menu", JOptionPane.DEFAULT_OPTION, JOptionPane.PLAIN_MESSAGE, null, options, options[0]);
       
       String username = " ";
       String password = " ";
       
       switch(selectionChoice){
           case 0: 
               username = JOptionPane.showInputDialog(null, "Enter username: ");
               boolean isValidPassword = false;
               while (!isValidPassword){
                   password = JOptionPane.showInputDialog(null, "Enter a password:");
                   
                   if (password.length() < 8 || password.toLowerCase().equals(password) || !password.matches(".*\\d.*")){
                       
                       JOptionPane.showMessageDialog(null, "Password must be at least 8 characters long, contain at least one uppercase letter, one lowercase letter, and one digit. Please try again.");
                       
                     
                   }
                   else {
                        isValidPassword = true;
                        JOptionPane.showMessageDialog(null, "Registration successful! Your username is: " + username + " and your password is: " + password);

                   }
               }
               break;
           case 1: 
               boolean isLoggedIn = false;
                while (!isLoggedIn) {
                    String enteredUsername = JOptionPane.showInputDialog(null, "Enter your username:");
                    String enteredPassword = JOptionPane.showInputDialog(null, "Enter your password:");
                if (enteredUsername.equals(username) && enteredPassword.equals(password)) {
                    JOptionPane.showMessageDialog(null, "Login successful!");
                    isLoggedIn = true;
                } else {
                    JOptionPane.showMessageDialog(null, "Invalid username or password. Please try again.");
                }
            }
                break;
           case 2:
               System.exit(0);
        }
       while (tasks.getOption() != 3){
           
            int option = Integer.parseInt(JOptionPane.showInputDialog(null,
                            "Please select one of the following options, type in the number to select.\n\n"
                            + "1) Add tasks\n"
                            + "2) Show report\n"
                            + "3) Quit"));
            tasks.setOption(option);
            if (tasks.getOption() == 1){
                int task = Integer.parseInt(JOptionPane.showInputDialog(null, "Enter the number of tasks you want to add:"));
                        tasks.setTasks(task);
                        
                String[] developer = new String[task];
                String[] name = new String[task];
                String[] taskID = new String[task];
                int[] taskduration = new int[task];
                String[] status = new String[task];
                
                for (int m = 0; m < task; m++){
                    
                    String taskNam = JOptionPane.showInputDialog(null, "Enter the name of task " + (m + 1) + ":");
                    tasks.setName(taskNam);
                    num += 1;
                    tasks.setNumber(num);
                    JOptionPane.showMessageDialog(null, "Task successfully captured.");
                    String DeveloperName = JOptionPane.showInputDialog(null, "Enter the first and last name of the developer assigned to the task:");
                    tasks.setDeveloper(DeveloperName);
                    int taskDuration = Integer.parseInt(JOptionPane.showInputDialog(null, "Enter the time it would take(in hours) to complete the task:"));
                    tasks.setTaskduration(taskDuration);
                    
                    for (int t = 0; t < 1; ){
                        
                        int statusOption = Integer.parseInt(JOptionPane.showInputDialog(null, 
                                        "Please select a task status, type in the number to select.\n\n" + 
                                        "1) To Do\n" + 
                                        "2) Done\n" + 
                                        "3) Doing"));
                        tasks.setStatusOption(statusOption);
                        String taskStatus = null;
                            if (tasks.getStatusOption()== 1) {
                                taskStatus = "To Do";
                                tasks.setStatus(taskStatus);
                                t++;
                            } else if (tasks.getStatusOption() == 2){
                                taskStatus = "Done";
                                tasks.setStatus(taskStatus);
                                t++;   
                            } else if (tasks.getStatusOption() == 3){
                                taskStatus = "Doing";
                                tasks.setStatus(taskStatus);
                                t++;
                            } else if (tasks.getStatusOption() != 1 && tasks.getStatusOption() != 2 && tasks.getStatusOption() != 3){
                                JOptionPane.showMessageDialog(null, "Incorrect option selected, please try again.");
                            }    
                    }
                    JOptionPane.showMessageDialog(null, tasks.TaskDetails());
                            
                            //Populating arrays
                            String devFullName = tasks.getDeveloper();
                            developer[m] = devFullName;
                            name[m] = taskNam;
                            taskID[m] = tasks.TaskID();
                            taskduration[m] = taskDuration;
                            status[m] = tasks.getStatus();
                           
                            tReport.setDeveloper(developer);
                            tReport.setName(name);
                            tReport.setTaskID(taskID);
                            tReport.setTaskduration(taskduration);
                            tReport.setStatus(status);
                }
            }else if (tasks.getOption() == 2){
                int reportOptions = Integer.parseInt(JOptionPane.showInputDialog(null, "Select an option: \n" +
                            "1) Display tasks that are done.\n" + 
                            "2) Display tasks with the longest duration.\n" + 
                            "3) Search by task name.\n" + 
                            "4) Search by developer.\n" +
                            "5) Delete a task using the task name.\n" +
                            "6) Display all tasks.\n"));
                            
                if (reportOptions == 1) {
                            tReport.S_Done();
                        } else if (reportOptions == 2) {
                            tReport.L_duration();
                        } else if (reportOptions == 3) {
                            tReport.searchT_Name();
                        } else if (reportOptions == 4) {
                            tReport.seachTaskDeveloper();
                        } else if (reportOptions == 5) {
                            tReport.deleteTask();
                        } else if (reportOptions == 6) {
                            tReport.displayReport();
                        }
                    } else if (tasks.getOption() == 3){
                        JOptionPane.showMessageDialog(null, "Session has ended!");
                        System.exit(0);
                        break;
                    } else if (tasks.getOption() != 1 && tasks.getOption() != 2 && tasks.getOption() != 3 ){
                        JOptionPane.showMessageDialog(null, "Incorrect option selected, please try again!");

                    }
            

                }
            }       
       }   
    
